//头文件game.h
#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
//定义常量方便更改棋盘大小
#define ROW 9
#define COL 9
//防止检测的雷在边缘
#define ROWS ROW+2
#define COLS COL+2
//定义雷的数目
#define CONST 10
//定义函数初始化
void Initboard(char board[ROWS][COLS],int rows,int cols,char set);
void Displayboard(char board[ROWS][COLS],int row,int col);
//放雷
void Putbrock(char board[ROWS][COLS],int row,int col);
//排雷
void Creasemine(char top[ROWS][COLS],char bottom[ROWS][COLS],int row,int col);



//源文件test.c
#include"game.h"
#define _CRT_SECURE_NO_WARNINGS 1
void game()
{
	//需要个9*9的棋盘二维数组
	char top[ROWS][COLS]={0};
	char bottom[ROWS][COLS]={0};
	//初始化棋盘
	Initboard(top,ROWS,COLS,'0');
	Initboard(bottom,ROWS,COLS,'+');	
	//打印棋盘
	//Displayboard(top,ROW,COL);
	Displayboard(bottom,ROW,COL);
	//放雷

	 Putbrock(top,ROW,COL);
	 //排雷
	 Creasemine(top,bottom,ROW,COL);
	

}
void menu()
{
	printf("----------------------------\n");
	printf("----- 1 play 0 exit  -------\n");
	printf("----------------------------\n");
	
}
//游戏循环
void test()
{
	int input;
	srand((unsigned int)time(NULL));
	
	//循环菜单
	do
	{
		//菜单提示
		menu();
		printf("请选择\n");
		scanf("%d",&input);
		switch(input)
		{
		case 1:
			//游戏主操作
			game();
			break;
		case 0:
			printf("游戏结束\n");
			break;
		default:
			printf("输入错误，请重新输入\n");
			break;
		}
	}while(input);
}
int main()
{
	test();
	return 0;
}



//源文件game.c
//相应函数
#define _CRT_SECURE_NO_WARNINGS 1
#include"game.h"
void Initboard(char board[ROWS][COLS],int rows,int cols,char set)
{
	int i=0;
	int j=0;
	for(i=0;i<rows;i++)
	{
		for(j=0;j<cols;j++)
		{
			board[i][j]=set;
		}
	}
}
void Displayboard(char board[ROWS][COLS],int row,int col)
{
	int i=0;
	int j=0;
	for(i=0;i<=col;i++)
	{
		printf("%d ",i);
	}
	printf("\n");
	for(i=1;i<=row;i++)
	{
		printf("%d ",i);
		for(j=1;j<=col;j++)
		{
			printf("%c ",board[i][j]);
		}
		printf("\n");
	}
}
void Putbrock(char board[ROWS][COLS],int row,int col)
{
	int x=0;
	int y=0;
	int count=CONST;
	
	while(count)
	{
		x=rand()%row+1;
		y=rand()%col+1;
		if(board[x][y]=='0')
		{
			board[x][y]='1';
			count--;
		}
	}

}
int Searchmine(char TOP[ROWS][COLS],int x,int y)
{
	return	TOP[x-1][y]+
		TOP[x-1][y-1]+
		TOP[x-1][y+1]+
		TOP[x][y-1]+
		TOP[x+1][y]+
		TOP[x+1][y+1]+
		TOP[x+1][y-1]+
		TOP[x][x+1]-8*'0';
}
void Creasemine(char top[ROWS][COLS],char bottom[ROWS][COLS],int row,int col)
{
	int x,y;
	int mine=0;
		while(mine<row*col-CONST)
		{
			printf("请输入你选择的坐标\n");
			scanf("%d%d",&x,&y);
			if(x>=1&&x<=row&&y>=1&&y<=col)
			{
				if(top[x][y]=='1')
				{
					printf("很遗憾，你被炸死了\n");
					Displayboard(top,row,col);
					break;
				}
				else if(bottom[x][y]!='+')
				{
					printf("输入已选，重新输入\n");
					Displayboard(bottom,row,col);
				}
				else
				{
					int count=Searchmine(top,x,y);
					bottom[x][y]=count+'0';
					Displayboard(bottom,row,col);
					mine++;
				}
			}
			else
			{
				printf("输入坐标错误，重新输入\n");
			}
		}
		if(mine==row*col-CONST)
		{
		printf("恭喜你，排雷成功\n");
		Displayboard(top,row,col);
		}
		
}
