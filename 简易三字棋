//头文件game.h


#include<stdio.h>
#include<time.h>
#include<stdlib.h>
#define ROW 3
#define CUL 3
#define _CRT_SECURE_NO_WARNINGS 1
void Initboard(char board[ROW][CUL],int row,int cul);
void Displayboard(char board[ROW][CUL],int row,int cul);
void Playermove(char board[ROW][CUL],int row,int cul);
void Computermove(char board[ROW][CUL],int row,int cul);
char Judgmentresult(char board[ROW][CUL],int row,int cul);
int Isfuil(char board[ROW][CUL],int row,int cul);



//源文件game.c
#include"game.h"
#define _CRT_SECURE_NO_WARNINGS 1
int Isfuil(char board[ROW][CUL],int row,int cul)
{
	int i,j;
	for(i=0;i<row;i++)
	{
		for(j=0;j<cul;j++)
		{
		if(board[i][j]==' ')
		return 0;
		}
	}
	return 1;
}
void Initboard(char board[ROW][CUL],int row,int cul)
{
	int i,j;
	for(i=0;i<row;i++)
	{
		for(j=0;j<cul;j++)
		{
			board[i][j]=' ';
		}
	}
}
void Displayboard(char board[ROW][CUL],int row,int cul)
{
	int i,j;
	for(i=0;i<row;i++)
	{
		for(j=0;j<cul;j++)
		{
			printf(" %c ",board[i][j]);
			if(j<cul-1)
			{
				printf("|");
			}	
		}
		printf("\n");
		if(i<row-1)
		{
			for(j=0;j<cul;j++)
			{
				printf("---");
				if(j<cul-1)
				{
					printf("|");
				}
			}
		}
		printf("\n");
	}
}
void Playermove(char board[ROW][CUL],int row,int cul)
{
	int x,y;
	printf("玩家走\n");
	while(1)
	{
		
		printf("请输入你想要落子的坐标\n");
		scanf("%d%d",&x,&y);
		getchar();
		//判断落子的可行性
		if(x>=1&&x<=row&&y>=1&&y<=cul)
		{
			if(board[x-1][y-1]==' ')
			{
				board[x-1][y-1]='*';
				break;
			}
			else 
			{
				printf("该位置已有落子\n");
			}
		}
		else
		{
			printf("输入错误，重新输入\n");
		}

	
	}
}
void Computermove(char board[ROW][CUL],int row,int cul)
{
	int i=0;
	int j=0;
	printf("电脑走\n");
	while(1)
	{
		
		i=rand()%row;
		j=rand()%cul;
		if(board[i][j]==' ')
		{
			board[i][j]='#';
			break;
		}		
	}

}
//四种
//玩家赢
//电脑赢
//平局
//继续下
char Judgmentresult(char board[ROW][CUL],int row,int cul)
{
	int i=0;
	//判断横三行
	for(i=0;i<row;i++)
	{
		if(board[0][i]==board[1][i]&&board[1][i]==board[2][i]&&board[1][i]!=' ')
		{
			return board[1][i];
		}
	}
	//判断竖三列
	for(i=0;i<cul;i++)
	{
		if(board[i][0]==board[i][1]&&board[i][1]==board[i][2]&&board[i][1]!=' ')
		{
			return board[i][1];
		}
	}
	//分别判断两个对角线
	if(board[0][0]==board[1][1]&&board[2][2]==board[1][1]&&board[1][1]!=' ')
		return board[1][1];
	if(board[0][2]==board[1][1]&&board[1][1]==board[2][0]&&board[1][1]!=' ')
		return board[1][1];
	//判断是否平局
	if(1==Isfuil(board,ROW,CUL))
	{
	return 'Q';
	}
	return 'C';
}




//源文件test.c
#include"game.h"
#define _CRT_SECURE_NO_WARNINGS 1
void game()
{
	char board[ROW][CUL]={0};
	char ret=0;
	srand((unsigned int)time(NULL));
	//棋盘初始化
	
	Initboard(board,ROW,CUL);
	//显示棋盘
	Displayboard(board,ROW,CUL);
	//玩家走
	while(1)
	{
		Playermove(board,ROW,CUL);
		Displayboard(board,ROW,CUL);
		//判断输赢-玩家赢
		
		ret=Judgmentresult(board,ROW,CUL);
		if(ret!='C')
		{
			break;
		}
		//电脑走
		Computermove(board,ROW,CUL);
		Displayboard(board,ROW,CUL);
		ret=Judgmentresult(board,ROW,CUL);
			if(ret!='C')
		{
			break;
		}
	}
	if(ret=='*')
	{
		printf("玩家赢\n");
	}
	if(ret=='#')
	{
		printf("电脑赢\n");
	}
	if(ret=='Q')
	{
		printf("平局\n");
	}
}
void menu()
{
	printf("--------------------------\n");
	printf("------- 1 play 0 exit-----\n");
	printf("--------------------------\n");
}

void test()
{
	int input=0;
	do
	{
		menu();
		printf("请选择\n");
		scanf("%d",&input);
		switch(input)
		{
		case 1:
			game();
			break;
		case 0:
			printf("游戏结束\n");
			break;
		default:
			printf("输入错误，重新输入\n");
			break;
		}
	}while(input);

}
int main()
{
	test();
	return 0;
}
